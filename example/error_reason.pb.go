// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: example/error_reason.proto

package example

import (
	_ "github.com/fzf-labs/protoc-gen-go-errors/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorReason int32

const (
	ErrorReason_BAD_REQUEST           ErrorReason = 0
	ErrorReason_UNAUTHORIZED          ErrorReason = 1
	ErrorReason_FORBIDDEN             ErrorReason = 2
	ErrorReason_NOT_FOUND             ErrorReason = 3
	ErrorReason_METHOD_NOT_ALLOWED    ErrorReason = 4
	ErrorReason_REQUEST_TIMEOUT       ErrorReason = 5
	ErrorReason_CONFLICT              ErrorReason = 6
	ErrorReason_INTERNAL_SERVER_ERROR ErrorReason = 7
	ErrorReason_NOT_IMPLEMENTED       ErrorReason = 8
	ErrorReason_BAD_GATEWAY           ErrorReason = 9
	ErrorReason_SERVICE_UNAVAILABLE   ErrorReason = 10
	ErrorReason_GATEWAY_TIMEOUT       ErrorReason = 11
)

// Enum value maps for ErrorReason.
var (
	ErrorReason_name = map[int32]string{
		0:  "BAD_REQUEST",
		1:  "UNAUTHORIZED",
		2:  "FORBIDDEN",
		3:  "NOT_FOUND",
		4:  "METHOD_NOT_ALLOWED",
		5:  "REQUEST_TIMEOUT",
		6:  "CONFLICT",
		7:  "INTERNAL_SERVER_ERROR",
		8:  "NOT_IMPLEMENTED",
		9:  "BAD_GATEWAY",
		10: "SERVICE_UNAVAILABLE",
		11: "GATEWAY_TIMEOUT",
	}
	ErrorReason_value = map[string]int32{
		"BAD_REQUEST":           0,
		"UNAUTHORIZED":          1,
		"FORBIDDEN":             2,
		"NOT_FOUND":             3,
		"METHOD_NOT_ALLOWED":    4,
		"REQUEST_TIMEOUT":       5,
		"CONFLICT":              6,
		"INTERNAL_SERVER_ERROR": 7,
		"NOT_IMPLEMENTED":       8,
		"BAD_GATEWAY":           9,
		"SERVICE_UNAVAILABLE":   10,
		"GATEWAY_TIMEOUT":       11,
	}
)

func (x ErrorReason) Enum() *ErrorReason {
	p := new(ErrorReason)
	*p = x
	return p
}

func (x ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_example_error_reason_proto_enumTypes[0].Descriptor()
}

func (ErrorReason) Type() protoreflect.EnumType {
	return &file_example_error_reason_proto_enumTypes[0]
}

func (x ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorReason.Descriptor instead.
func (ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_example_error_reason_proto_rawDescGZIP(), []int{0}
}

var File_example_error_reason_proto protoreflect.FileDescriptor

var file_example_error_reason_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xed, 0x07, 0x0a, 0x0b, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0b, 0x42, 0x41,
	0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x00, 0x1a, 0x35, 0xa8, 0x45, 0x90,
	0x03, 0xea, 0x83, 0x01, 0x0b, 0x42, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0xaa, 0xc2, 0x01, 0x1e, 0x0a, 0x0b, 0x42, 0x61, 0x64, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0f, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe7, 0x9a, 0x84, 0xe8, 0xaf, 0xb7, 0xe6,
	0xb1, 0x82, 0x12, 0x46, 0x0a, 0x0c, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a,
	0x45, 0x44, 0x10, 0x01, 0x1a, 0x34, 0xa8, 0x45, 0x91, 0x03, 0xea, 0x83, 0x01, 0x0c, 0x55, 0x4e,
	0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0xaa, 0xc2, 0x01, 0x1c, 0x0a, 0x0c,
	0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x0c, 0xe6, 0x9c,
	0xaa, 0xe7, 0xbb, 0x8f, 0xe6, 0x8e, 0x88, 0xe6, 0x9d, 0x83, 0x12, 0x3d, 0x0a, 0x09, 0x46, 0x4f,
	0x52, 0x42, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x02, 0x1a, 0x2e, 0xa8, 0x45, 0x93, 0x03, 0xea,
	0x83, 0x01, 0x09, 0x46, 0x4f, 0x52, 0x42, 0x49, 0x44, 0x44, 0x45, 0x4e, 0xaa, 0xc2, 0x01, 0x19,
	0x0a, 0x09, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x0c, 0xe7, 0xa6, 0x81,
	0xe6, 0xad, 0xa2, 0xe8, 0xae, 0xbf, 0xe9, 0x97, 0xae, 0x12, 0x40, 0x0a, 0x09, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x1a, 0x31, 0xa8, 0x45, 0x94, 0x03, 0xea, 0x83,
	0x01, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0xaa, 0xc2, 0x01, 0x1c, 0x0a,
	0x09, 0x4e, 0x6f, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x0f, 0xe8, 0xb5, 0x84, 0xe6,
	0xba, 0x90, 0xe6, 0x9c, 0xaa, 0xe6, 0x89, 0xbe, 0xe5, 0x88, 0xb0, 0x12, 0x5b, 0x0a, 0x12, 0x4d,
	0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45,
	0x44, 0x10, 0x04, 0x1a, 0x43, 0xa8, 0x45, 0x95, 0x03, 0xea, 0x83, 0x01, 0x12, 0x4d, 0x45, 0x54,
	0x48, 0x4f, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0xaa,
	0xc2, 0x01, 0x25, 0x0a, 0x12, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x20, 0x6e, 0x6f, 0x74, 0x20,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x0f, 0xe6, 0x96, 0xb9, 0xe6, 0xb3, 0x95, 0xe4,
	0xb8, 0x8d, 0xe5, 0x85, 0x81, 0xe8, 0xae, 0xb8, 0x12, 0x4f, 0x0a, 0x0f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x05, 0x1a, 0x3a, 0xa8,
	0x45, 0x98, 0x03, 0xea, 0x83, 0x01, 0x0f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0xaa, 0xc2, 0x01, 0x1f, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x0c, 0xe8, 0xaf, 0xb7,
	0xe6, 0xb1, 0x82, 0xe8, 0xb6, 0x85, 0xe6, 0x97, 0xb6, 0x12, 0x3a, 0x0a, 0x08, 0x43, 0x4f, 0x4e,
	0x46, 0x4c, 0x49, 0x43, 0x54, 0x10, 0x06, 0x1a, 0x2c, 0xa8, 0x45, 0x99, 0x03, 0xea, 0x83, 0x01,
	0x08, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0xaa, 0xc2, 0x01, 0x18, 0x0a, 0x08, 0x43,
	0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12, 0x0c, 0xe8, 0xb5, 0x84, 0xe6, 0xba, 0x90, 0xe5,
	0x86, 0xb2, 0xe7, 0xaa, 0x81, 0x12, 0x6a, 0x0a, 0x15, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07,
	0x1a, 0x4f, 0xa8, 0x45, 0xf4, 0x03, 0xea, 0x83, 0x01, 0x15, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e,
	0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0xaa,
	0xc2, 0x01, 0x2e, 0x0a, 0x15, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x15, 0xe5, 0x86, 0x85, 0xe9,
	0x83, 0xa8, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe9, 0x94, 0x99, 0xe8, 0xaf,
	0xaf, 0x12, 0x4c, 0x0a, 0x0f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x45, 0x44, 0x10, 0x08, 0x1a, 0x37, 0xa8, 0x45, 0xf5, 0x03, 0xea, 0x83, 0x01, 0x0f,
	0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0xaa,
	0xc2, 0x01, 0x1c, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x20, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x64, 0x12, 0x09, 0xe6, 0x9c, 0xaa, 0xe5, 0xae, 0x9e, 0xe7, 0x8e, 0xb0, 0x12,
	0x46, 0x0a, 0x0b, 0x42, 0x41, 0x44, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x09,
	0x1a, 0x35, 0xa8, 0x45, 0xf6, 0x03, 0xea, 0x83, 0x01, 0x0b, 0x42, 0x41, 0x44, 0x5f, 0x47, 0x41,
	0x54, 0x45, 0x57, 0x41, 0x59, 0xaa, 0xc2, 0x01, 0x1e, 0x0a, 0x0b, 0x42, 0x61, 0x64, 0x20, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x0f, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0xe7, 0x9a,
	0x84, 0xe7, 0xbd, 0x91, 0xe5, 0x85, 0xb3, 0x12, 0x5e, 0x0a, 0x13, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0a,
	0x1a, 0x45, 0xa8, 0x45, 0xf7, 0x03, 0xea, 0x83, 0x01, 0x13, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0xaa, 0xc2, 0x01,
	0x26, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x75, 0x6e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0f, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe4, 0xb8,
	0x8d, 0xe5, 0x8f, 0xaf, 0xe7, 0x94, 0xa8, 0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x41, 0x54, 0x45, 0x57,
	0x41, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x0b, 0x1a, 0x3a, 0xa8, 0x45,
	0xf8, 0x03, 0xea, 0x83, 0x01, 0x0f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x4f, 0x55, 0x54, 0xaa, 0xc2, 0x01, 0x1f, 0x0a, 0x0f, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x0c, 0xe7, 0xbd, 0x91, 0xe5,
	0x85, 0xb3, 0xe8, 0xb6, 0x85, 0xe6, 0x97, 0xb6, 0x1a, 0x30, 0xa0, 0x45, 0xf4, 0x03, 0xe2, 0x83,
	0x01, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0xa2, 0xc2, 0x01, 0x1d, 0x0a, 0x0d, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0c, 0xe6, 0x9c,
	0xaa, 0xe7, 0x9f, 0xa5, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x7a, 0x66, 0x2d, 0x6c, 0x61, 0x62,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x3b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_example_error_reason_proto_rawDescOnce sync.Once
	file_example_error_reason_proto_rawDescData = file_example_error_reason_proto_rawDesc
)

func file_example_error_reason_proto_rawDescGZIP() []byte {
	file_example_error_reason_proto_rawDescOnce.Do(func() {
		file_example_error_reason_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_error_reason_proto_rawDescData)
	})
	return file_example_error_reason_proto_rawDescData
}

var file_example_error_reason_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_example_error_reason_proto_goTypes = []interface{}{
	(ErrorReason)(0), // 0: example.ErrorReason
}
var file_example_error_reason_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_example_error_reason_proto_init() }
func file_example_error_reason_proto_init() {
	if File_example_error_reason_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_error_reason_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_example_error_reason_proto_goTypes,
		DependencyIndexes: file_example_error_reason_proto_depIdxs,
		EnumInfos:         file_example_error_reason_proto_enumTypes,
	}.Build()
	File_example_error_reason_proto = out.File
	file_example_error_reason_proto_rawDesc = nil
	file_example_error_reason_proto_goTypes = nil
	file_example_error_reason_proto_depIdxs = nil
}
